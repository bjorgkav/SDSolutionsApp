@model SDSolutionsApp.Models.RecyclableItem

@{
    ViewBag.Title = "Add an Item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Item</h2>

@using (Html.BeginForm("ProcessAddItem", "Recyclable", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Recyclable Item</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.RecylableTypeId, "RecylableTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <!--DROPDOWN LIST-->
            @Html.DropDownListFor(model => model.RecylableTypeId, ViewBag.TypeList as SelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RecylableTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ComputedRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ComputedRate, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.ComputedRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            <input type="button" value="Reset" class="btn btn-default" onclick="clearall()"/>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ListItems")
</div>

@section Scripts {
    <script type="text/javascript">

        var type_rate = 0;

        let typeelem = document.getElementById("RecylableTypeId")
        let rateelem = document.getElementById("ComputedRate");
        let weightelem = document.getElementById("Weight");
        let descelem = document.getElementById("ItemDescription");

        typeelem.addEventListener("change", adjust_weight);
        weightelem.addEventListener("change", adjust_weight);

        document.onload = getRate();

        function recalculate(weight_value) {

            $.ajax({
                type: "POST",
                url: "/Recyclable/FindRate",
                data: { "id": typeelem.value },
                success: function (response) {
                    var weight_input = weight_value;
                    new_rate = response * weight_input;
                    rateelem.value = new_rate.toFixed(2);
                },
                failure: function () {
                    alert("AJAX request failed. (FindRate)")
                },
                error: function () {
                    alert("AJAX request failed. (FindRate)")
                }
            });
        }

        function adjust_weight() {
            $.ajax({
                type: "POST",
                url: "/Recyclable/ValidateWeight",
                data: { "id": typeelem.value, "input": weightelem.value },
                success: function (response) {
                    weightelem.value = response;
                    recalculate(response);
                },
                failure: function () {
                    alert("AJAX request failed. (ValidateWeight)")
                },
                error: function () {
                    alert("AJAX request failed. (ValidateWeight)")
                }
            });
        }

        function clearall() {
            typeelem.value = -1;
            var zero = 0;
            rateelem.value = zero.toFixed(2);
            weightelem.value = zero.toFixed(2);
            descelem.value = "";
        }
    /**/
    </script>
}
